//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Intentionally left empty

// Code generated by nexus-openapi-gen. DO NOT EDIT.

// This file was autogenerated by openapi-gen. Do not edit it manually!

package openapi

import (
	common "github.com/vmware-tanzu/graph-framework-for-microservices/kube-openapi/pkg/common"
	spec "github.com/vmware-tanzu/graph-framework-for-microservices/kube-openapi/pkg/validation/spec"
)

func GetOpenAPIDefinitions(ref common.ReferenceCallback) map[string]common.OpenAPIDefinition {
	return map[string]common.OpenAPIDefinition{
		"nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.Child":                              schema_nexustempmodule_apis_configtsmtanzuvmwarecom_v1_Child(ref),
		"nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.Cluster":                            schema_nexustempmodule_apis_configtsmtanzuvmwarecom_v1_Cluster(ref),
		"nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.ClusterNamespace":                   schema_nexustempmodule_apis_configtsmtanzuvmwarecom_v1_ClusterNamespace(ref),
		"nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.Config":                             schema_nexustempmodule_apis_configtsmtanzuvmwarecom_v1_Config(ref),
		"nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.ConfigNexusStatus":                  schema_nexustempmodule_apis_configtsmtanzuvmwarecom_v1_ConfigNexusStatus(ref),
		"nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.ConfigSpec":                         schema_nexustempmodule_apis_configtsmtanzuvmwarecom_v1_ConfigSpec(ref),
		"nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.CrossPackageTester":                 schema_nexustempmodule_apis_configtsmtanzuvmwarecom_v1_CrossPackageTester(ref),
		"nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.Domain":                             schema_nexustempmodule_apis_configtsmtanzuvmwarecom_v1_Domain(ref),
		"nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.DomainNexusStatus":                  schema_nexustempmodule_apis_configtsmtanzuvmwarecom_v1_DomainNexusStatus(ref),
		"nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.DomainSpec":                         schema_nexustempmodule_apis_configtsmtanzuvmwarecom_v1_DomainSpec(ref),
		"nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.EmptyStructTest":                    schema_nexustempmodule_apis_configtsmtanzuvmwarecom_v1_EmptyStructTest(ref),
		"nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.FooTypeABC":                         schema_nexustempmodule_apis_configtsmtanzuvmwarecom_v1_FooTypeABC(ref),
		"nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.FooTypeABCNexusStatus":              schema_nexustempmodule_apis_configtsmtanzuvmwarecom_v1_FooTypeABCNexusStatus(ref),
		"nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.FooTypeABCSpec":                     schema_nexustempmodule_apis_configtsmtanzuvmwarecom_v1_FooTypeABCSpec(ref),
		"nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.Link":                               schema_nexustempmodule_apis_configtsmtanzuvmwarecom_v1_Link(ref),
		"nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.MatchCondition":                     schema_nexustempmodule_apis_configtsmtanzuvmwarecom_v1_MatchCondition(ref),
		"nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.NexusStatus":                        schema_nexustempmodule_apis_configtsmtanzuvmwarecom_v1_NexusStatus(ref),
		"nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.SomeStruct":                         schema_nexustempmodule_apis_configtsmtanzuvmwarecom_v1_SomeStruct(ref),
		"nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.StructWithEmbeddedField":            schema_nexustempmodule_apis_configtsmtanzuvmwarecom_v1_StructWithEmbeddedField(ref),
		"nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.TestValMarkers":                     schema_nexustempmodule_apis_configtsmtanzuvmwarecom_v1_TestValMarkers(ref),
		"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.AdditionalDescription":                 schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_AdditionalDescription(ref),
		"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.AdditionalGnsData":                     schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_AdditionalGnsData(ref),
		"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.AdditionalGnsDataNexusStatus":          schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_AdditionalGnsDataNexusStatus(ref),
		"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.AdditionalGnsDataSpec":                 schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_AdditionalGnsDataSpec(ref),
		"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.AdditionalStatus":                      schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_AdditionalStatus(ref),
		"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.Answer":                                schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_Answer(ref),
		"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.BarChild":                              schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_BarChild(ref),
		"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.BarChildNexusStatus":                   schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_BarChildNexusStatus(ref),
		"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.BarChildSpec":                          schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_BarChildSpec(ref),
		"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.Child":                                 schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_Child(ref),
		"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.Description":                           schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_Description(ref),
		"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.Dns":                                   schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_Dns(ref),
		"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.DnsNexusStatus":                        schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_DnsNexusStatus(ref),
		"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.Foo":                                   schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_Foo(ref),
		"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.FooNexusStatus":                        schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_FooNexusStatus(ref),
		"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.FooSpec":                               schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_FooSpec(ref),
		"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.Gns":                                   schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_Gns(ref),
		"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.GnsNexusStatus":                        schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_GnsNexusStatus(ref),
		"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.GnsSpec":                               schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_GnsSpec(ref),
		"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.GnsState":                              schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_GnsState(ref),
		"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.HostPort":                              schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_HostPort(ref),
		"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.IgnoreChild":                           schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_IgnoreChild(ref),
		"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.IgnoreChildNexusStatus":                schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_IgnoreChildNexusStatus(ref),
		"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.IgnoreChildSpec":                       schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_IgnoreChildSpec(ref),
		"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.Link":                                  schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_Link(ref),
		"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.NexusStatus":                           schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_NexusStatus(ref),
		"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.RandomDescription":                     schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_RandomDescription(ref),
		"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.RandomGnsData":                         schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_RandomGnsData(ref),
		"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.RandomGnsDataNexusStatus":              schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_RandomGnsDataNexusStatus(ref),
		"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.RandomGnsDataSpec":                     schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_RandomGnsDataSpec(ref),
		"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.RandomStatus":                          schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_RandomStatus(ref),
		"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.ReplicationSource":                     schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_ReplicationSource(ref),
		"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.ServiceSegmentRef":                     schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_ServiceSegmentRef(ref),
		"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.gnsQueryFilters":                       schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_gnsQueryFilters(ref),
		"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.metricsFilers":                         schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_metricsFilers(ref),
		"nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.ACPConfig":                       schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_ACPConfig(ref),
		"nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.ACPConfigNexusStatus":            schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_ACPConfigNexusStatus(ref),
		"nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.ACPConfigSpec":                   schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_ACPConfigSpec(ref),
		"nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.ACPStatus":                       schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_ACPStatus(ref),
		"nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.ACPSvcGroupLinkInfo":             schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_ACPSvcGroupLinkInfo(ref),
		"nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.AccessControlPolicy":             schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_AccessControlPolicy(ref),
		"nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.AccessControlPolicyNexusStatus":  schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_AccessControlPolicyNexusStatus(ref),
		"nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.AccessControlPolicySpec":         schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_AccessControlPolicySpec(ref),
		"nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.AdditionalDescription":           schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_AdditionalDescription(ref),
		"nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.AdditionalPolicyData":            schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_AdditionalPolicyData(ref),
		"nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.AdditionalPolicyDataNexusStatus": schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_AdditionalPolicyDataNexusStatus(ref),
		"nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.AdditionalPolicyDataSpec":        schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_AdditionalPolicyDataSpec(ref),
		"nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.AdditionalStatus":                schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_AdditionalStatus(ref),
		"nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.Child":                           schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_Child(ref),
		"nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.Link":                            schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_Link(ref),
		"nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.NexusStatus":                     schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_NexusStatus(ref),
		"nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.PolicyCfgAction":                 schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_PolicyCfgAction(ref),
		"nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.RandomDescription":               schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_RandomDescription(ref),
		"nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.RandomPolicyData":                schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_RandomPolicyData(ref),
		"nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.RandomPolicyDataNexusStatus":     schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_RandomPolicyDataNexusStatus(ref),
		"nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.RandomPolicyDataSpec":            schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_RandomPolicyDataSpec(ref),
		"nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.RandomStatus":                    schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_RandomStatus(ref),
		"nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.ResourceGroupID":                 schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_ResourceGroupID(ref),
		"nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.ResourceGroupRef":                schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_ResourceGroupRef(ref),
		"nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.VMpolicy":                        schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_VMpolicy(ref),
		"nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.VMpolicyNexusStatus":             schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_VMpolicyNexusStatus(ref),
		"nexustempmodule/apis/root.tsm.tanzu.vmware.com/v1.Child":                                schema_nexustempmodule_apis_roottsmtanzuvmwarecom_v1_Child(ref),
		"nexustempmodule/apis/root.tsm.tanzu.vmware.com/v1.Link":                                 schema_nexustempmodule_apis_roottsmtanzuvmwarecom_v1_Link(ref),
		"nexustempmodule/apis/root.tsm.tanzu.vmware.com/v1.NexusStatus":                          schema_nexustempmodule_apis_roottsmtanzuvmwarecom_v1_NexusStatus(ref),
		"nexustempmodule/apis/root.tsm.tanzu.vmware.com/v1.NonNexusType":                         schema_nexustempmodule_apis_roottsmtanzuvmwarecom_v1_NonNexusType(ref),
		"nexustempmodule/apis/root.tsm.tanzu.vmware.com/v1.Root":                                 schema_nexustempmodule_apis_roottsmtanzuvmwarecom_v1_Root(ref),
		"nexustempmodule/apis/root.tsm.tanzu.vmware.com/v1.RootNexusStatus":                      schema_nexustempmodule_apis_roottsmtanzuvmwarecom_v1_RootNexusStatus(ref),
		"nexustempmodule/apis/root.tsm.tanzu.vmware.com/v1.RootSpec":                             schema_nexustempmodule_apis_roottsmtanzuvmwarecom_v1_RootSpec(ref),
		"nexustempmodule/apis/root.tsm.tanzu.vmware.com/v1.queryFilters":                         schema_nexustempmodule_apis_roottsmtanzuvmwarecom_v1_queryFilters(ref),
		"nexustempmodule/apis/servicegroup.tsm.tanzu.vmware.com/v1.Child":                        schema_nexustempmodule_apis_servicegrouptsmtanzuvmwarecom_v1_Child(ref),
		"nexustempmodule/apis/servicegroup.tsm.tanzu.vmware.com/v1.Link":                         schema_nexustempmodule_apis_servicegrouptsmtanzuvmwarecom_v1_Link(ref),
		"nexustempmodule/apis/servicegroup.tsm.tanzu.vmware.com/v1.NexusStatus":                  schema_nexustempmodule_apis_servicegrouptsmtanzuvmwarecom_v1_NexusStatus(ref),
		"nexustempmodule/apis/servicegroup.tsm.tanzu.vmware.com/v1.SvcGroup":                     schema_nexustempmodule_apis_servicegrouptsmtanzuvmwarecom_v1_SvcGroup(ref),
		"nexustempmodule/apis/servicegroup.tsm.tanzu.vmware.com/v1.SvcGroupLinkInfo":             schema_nexustempmodule_apis_servicegrouptsmtanzuvmwarecom_v1_SvcGroupLinkInfo(ref),
		"nexustempmodule/apis/servicegroup.tsm.tanzu.vmware.com/v1.SvcGroupLinkInfoNexusStatus":  schema_nexustempmodule_apis_servicegrouptsmtanzuvmwarecom_v1_SvcGroupLinkInfoNexusStatus(ref),
		"nexustempmodule/apis/servicegroup.tsm.tanzu.vmware.com/v1.SvcGroupLinkInfoSpec":         schema_nexustempmodule_apis_servicegrouptsmtanzuvmwarecom_v1_SvcGroupLinkInfoSpec(ref),
		"nexustempmodule/apis/servicegroup.tsm.tanzu.vmware.com/v1.SvcGroupNexusStatus":          schema_nexustempmodule_apis_servicegrouptsmtanzuvmwarecom_v1_SvcGroupNexusStatus(ref),
		"nexustempmodule/apis/servicegroup.tsm.tanzu.vmware.com/v1.SvcGroupSpec":                 schema_nexustempmodule_apis_servicegrouptsmtanzuvmwarecom_v1_SvcGroupSpec(ref),
	}
}

func schema_nexustempmodule_apis_configtsmtanzuvmwarecom_v1_Child(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"group": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"kind": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"name": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"group", "kind", "name"},
			},
		},
	}
}

func schema_nexustempmodule_apis_configtsmtanzuvmwarecom_v1_Cluster(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"name": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"myID": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int32",
						},
					},
				},
				Required: []string{"name", "myID"},
			},
		},
	}
}

func schema_nexustempmodule_apis_configtsmtanzuvmwarecom_v1_ClusterNamespace(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"cluster": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.MatchCondition"),
						},
					},
					"namespace": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.MatchCondition"),
						},
					},
				},
				Required: []string{"cluster", "namespace"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.MatchCondition"},
	}
}

func schema_nexustempmodule_apis_configtsmtanzuvmwarecom_v1_Config(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.ConfigSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.ConfigNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.ConfigNexusStatus", "nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.ConfigSpec"},
	}
}

func schema_nexustempmodule_apis_configtsmtanzuvmwarecom_v1_ConfigNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_configtsmtanzuvmwarecom_v1_ConfigSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"myStr0": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"myStr1": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Type:   []string{"string"},
										Format: "",
									},
								},
							},
						},
					},
					"myStr2": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Type:   []string{"string"},
										Format: "",
									},
								},
							},
						},
					},
					"xYZPort": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int32",
						},
					},
					"aBCHost": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Type:   []string{"string"},
										Format: "",
									},
								},
							},
						},
					},
					"clusterNamespaces": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.ClusterNamespace"),
									},
								},
							},
						},
					},
					"testValMarkers": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.TestValMarkers"),
						},
					},
					"instance": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"number"},
							Format: "float",
						},
					},
					"option_cu": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"gNSGvk": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.Child"),
						},
					},
					"dNSGvk": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.Child"),
						},
					},
					"vMPPoliciesGvk": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.Child"),
						},
					},
					"domainGvk": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.Child"),
						},
					},
					"fooExampleGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.Child"),
									},
								},
							},
						},
					},
					"svcGrpInfoGvk": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.Child"),
						},
					},
					"aCPPoliciesGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.Link"),
									},
								},
							},
						},
					},
				},
				Required: []string{"myStr0", "myStr1", "myStr2", "xYZPort", "aBCHost", "clusterNamespaces", "testValMarkers", "instance", "option_cu"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.Child", "nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.ClusterNamespace", "nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.Link", "nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.TestValMarkers"},
	}
}

func schema_nexustempmodule_apis_configtsmtanzuvmwarecom_v1_CrossPackageTester(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"test": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"test"},
			},
		},
	}
}

func schema_nexustempmodule_apis_configtsmtanzuvmwarecom_v1_Domain(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.DomainSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.DomainNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.DomainNexusStatus", "nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.DomainSpec"},
	}
}

func schema_nexustempmodule_apis_configtsmtanzuvmwarecom_v1_DomainNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_configtsmtanzuvmwarecom_v1_DomainSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"pointPort": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int32",
						},
					},
					"pointString": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"pointInt": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int32",
						},
					},
					"pointMap": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Type:   []string{"string"},
										Format: "",
									},
								},
							},
						},
					},
					"pointSlice": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Type:   []string{"string"},
										Format: "",
									},
								},
							},
						},
					},
					"sliceOfPoints": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Type:   []string{"string"},
										Format: "",
									},
								},
							},
						},
					},
					"sliceOfArrPoints": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Type: []string{"array"},
										Items: &spec.SchemaOrArray{
											Schema: &spec.Schema{
												SchemaProps: spec.SchemaProps{
													Type:   []string{"string"},
													Format: "",
												},
											},
										},
									},
								},
							},
						},
					},
					"mapOfArrsPoints": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Type: []string{"array"},
										Items: &spec.SchemaOrArray{
											Schema: &spec.Schema{
												SchemaProps: spec.SchemaProps{
													Type:   []string{"string"},
													Format: "",
												},
											},
										},
									},
								},
							},
						},
					},
					"pointStruct": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.Cluster"),
						},
					},
				},
				Required: []string{"pointPort", "pointString", "pointInt", "pointMap", "pointSlice", "sliceOfPoints", "sliceOfArrPoints", "mapOfArrsPoints", "pointStruct"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.Cluster"},
	}
}

func schema_nexustempmodule_apis_configtsmtanzuvmwarecom_v1_EmptyStructTest(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
			},
		},
	}
}

func schema_nexustempmodule_apis_configtsmtanzuvmwarecom_v1_FooTypeABC(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.FooTypeABCSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.FooTypeABCNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.FooTypeABCNexusStatus", "nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.FooTypeABCSpec"},
	}
}

func schema_nexustempmodule_apis_configtsmtanzuvmwarecom_v1_FooTypeABCNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_configtsmtanzuvmwarecom_v1_FooTypeABCSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"fooA": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Type:   []string{"string"},
										Format: "",
									},
								},
							},
						},
					},
					"fooB": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Type:   []string{"string"},
										Format: "",
									},
								},
							},
						},
					},
					"FooC": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "byte",
						},
					},
					"FooD": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"number"},
							Format: "float",
						},
					},
					"foo_e": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "byte",
						},
					},
					"foo_f": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"number"},
							Format: "float",
						},
					},
				},
				Required: []string{"fooA", "fooB", "FooC", "FooD", "foo_e", "foo_f"},
			},
		},
	}
}

func schema_nexustempmodule_apis_configtsmtanzuvmwarecom_v1_Link(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"group": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"kind": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"name": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"group", "kind", "name"},
			},
		},
	}
}

func schema_nexustempmodule_apis_configtsmtanzuvmwarecom_v1_MatchCondition(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"name": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"type": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"name", "type"},
			},
		},
	}
}

func schema_nexustempmodule_apis_configtsmtanzuvmwarecom_v1_NexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"sourceGeneration": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int64",
						},
					},
					"remoteGeneration": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int64",
						},
					},
				},
				Required: []string{"sourceGeneration", "remoteGeneration"},
			},
		},
	}
}

func schema_nexustempmodule_apis_configtsmtanzuvmwarecom_v1_SomeStruct(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
			},
		},
	}
}

func schema_nexustempmodule_apis_configtsmtanzuvmwarecom_v1_StructWithEmbeddedField(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"SomeStruct": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.SomeStruct"),
						},
					},
					"MyStr": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"SomeStruct", "MyStr"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/config.tsm.tanzu.vmware.com/v1.SomeStruct"},
	}
}

func schema_nexustempmodule_apis_configtsmtanzuvmwarecom_v1_TestValMarkers(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"myStr": {
						SchemaProps: spec.SchemaProps{
							Type:      []string{"string"},
							Format:    "",
							MaxLength: IntPtr(8),
							MinLength: IntPtr(2),
							Pattern:   "ab",
						},
					},
					"myInt": {
						SchemaProps: spec.SchemaProps{
							Type:             []string{"integer"},
							Format:           "int32",
							Minimum:          FloatPtr(2),
							Maximum:          FloatPtr(8),
							ExclusiveMaximum: true,
						},
					},
					"mySlice": {
						SchemaProps: spec.SchemaProps{
							Type:        []string{"array"},
							MaxItems:    IntPtr(3),
							MinItems:    IntPtr(2),
							UniqueItems: true,
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Type:   []string{"string"},
										Format: "",
									},
								},
							},
						},
					},
				},
				Required: []string{"myStr", "myInt", "mySlice"},
			},
		},
	}
}

func schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_AdditionalDescription(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"discriptionA": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"discriptionB": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"discriptionC": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"discriptionD": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"discriptionA", "discriptionB", "discriptionC", "discriptionD"},
			},
		},
	}
}

func schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_AdditionalGnsData(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.AdditionalGnsDataSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.AdditionalGnsDataNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.AdditionalGnsDataNexusStatus", "nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.AdditionalGnsDataSpec"},
	}
}

func schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_AdditionalGnsDataNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.AdditionalStatus"),
						},
					},
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.AdditionalStatus", "nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_AdditionalGnsDataSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"description": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.AdditionalDescription"),
						},
					},
				},
				Required: []string{"description"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.AdditionalDescription"},
	}
}

func schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_AdditionalStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"statusX": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int32",
						},
					},
					"statusY": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int32",
						},
					},
				},
				Required: []string{"statusX", "statusY"},
			},
		},
	}
}

func schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_Answer(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"name": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"name"},
			},
		},
	}
}

func schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_BarChild(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.BarChildSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.BarChildNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.BarChildNexusStatus", "nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.BarChildSpec"},
	}
}

func schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_BarChildNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_BarChildSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"name": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"name"},
			},
		},
	}
}

func schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_Child(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"group": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"kind": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"name": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"group", "kind", "name"},
			},
		},
	}
}

func schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_Description(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"color": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"version": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"projectId": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"testAns": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.Answer"),
									},
								},
							},
						},
					},
					"instance": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"number"},
							Format: "float",
						},
					},
					"hostPort": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.HostPort"),
						},
					},
				},
				Required: []string{"color", "version", "projectId", "testAns", "instance", "hostPort"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.Answer", "nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.HostPort"},
	}
}

func schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_Dns(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.DnsNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.DnsNexusStatus"},
	}
}

func schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_DnsNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_Foo(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.FooSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.FooNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.FooNexusStatus", "nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.FooSpec"},
	}
}

func schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_FooNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_FooSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"password": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"password"},
			},
		},
	}
}

func schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_Gns(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.GnsSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.GnsNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.GnsNexusStatus", "nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.GnsSpec"},
	}
}

func schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_GnsNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"state": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.GnsState"),
						},
					},
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.GnsState", "nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_GnsSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"domain": {
						SchemaProps: spec.SchemaProps{
							Type:      []string{"string"},
							Format:    "",
							MaxLength: IntPtr(8),
							MinLength: IntPtr(2),
							Pattern:   "abc",
						},
					},
					"useSharedGateway": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"boolean"},
							Format: "",
						},
					},
					"description": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.Description"),
						},
					},
					"meta": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"port": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int32",
						},
					},
					"otherDescription": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.Description"),
						},
					},
					"mapPointer": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Type:   []string{"string"},
										Format: "",
									},
								},
							},
						},
					},
					"slicePointer": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Type:   []string{"string"},
										Format: "",
									},
								},
							},
						},
					},
					"workloadSpec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/vmware-tanzu/cartographer/pkg/apis/v1alpha1.WorkloadSpec"),
						},
					},
					"differentSpec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/vmware-tanzu/cartographer/pkg/apis/v1alpha1.WorkloadSpec"),
						},
					},
					"serviceSegmentRef": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.ServiceSegmentRef"),
						},
					},
					"serviceSegmentRefPointer": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.ServiceSegmentRef"),
						},
					},
					"serviceSegmentRefs": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.ServiceSegmentRef"),
									},
								},
							},
						},
					},
					"serviceSegmentRefMap": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.ServiceSegmentRef"),
									},
								},
							},
						},
					},
					"gnsServiceGroupsGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.Child"),
									},
								},
							},
						},
					},
					"gnsAccessControlPolicyGvk": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.Child"),
						},
					},
					"fooChildGvk": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.Child"),
						},
					},
					"ignoreChildGvk": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.Child"),
						},
					},
					"fooGvk": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.Child"),
						},
					},
					"dnsGvk": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.Link"),
						},
					},
				},
				Required: []string{"domain", "useSharedGateway", "description", "meta", "port", "otherDescription", "mapPointer", "slicePointer", "workloadSpec", "differentSpec"},
			},
		},
		Dependencies: []string{
			"github.com/vmware-tanzu/cartographer/pkg/apis/v1alpha1.WorkloadSpec", "nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.Child", "nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.Description", "nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.Link", "nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.ServiceSegmentRef"},
	}
}

func schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_GnsState(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"working": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"boolean"},
							Format: "",
						},
					},
					"temperature": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int32",
						},
					},
				},
				Required: []string{"working", "temperature"},
			},
		},
	}
}

func schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_HostPort(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"host": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"port": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int32",
						},
					},
				},
				Required: []string{"host", "port"},
			},
		},
	}
}

func schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_IgnoreChild(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.IgnoreChildSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.IgnoreChildNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.IgnoreChildNexusStatus", "nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.IgnoreChildSpec"},
	}
}

func schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_IgnoreChildNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_IgnoreChildSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"name": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"name"},
			},
		},
	}
}

func schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_Link(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"group": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"kind": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"name": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"group", "kind", "name"},
			},
		},
	}
}

func schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_NexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"sourceGeneration": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int64",
						},
					},
					"remoteGeneration": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int64",
						},
					},
				},
				Required: []string{"sourceGeneration", "remoteGeneration"},
			},
		},
	}
}

func schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_RandomDescription(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"discriptionA": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"discriptionB": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"discriptionC": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"discriptionD": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"discriptionA", "discriptionB", "discriptionC", "discriptionD"},
			},
		},
	}
}

func schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_RandomGnsData(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.RandomGnsDataSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.RandomGnsDataNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.RandomGnsDataNexusStatus", "nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.RandomGnsDataSpec"},
	}
}

func schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_RandomGnsDataNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.RandomStatus"),
						},
					},
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.NexusStatus", "nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.RandomStatus"},
	}
}

func schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_RandomGnsDataSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"description": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.RandomDescription"),
						},
					},
				},
				Required: []string{"description"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/gns.tsm.tanzu.vmware.com/v1.RandomDescription"},
	}
}

func schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_RandomStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"statusX": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int32",
						},
					},
					"statusY": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int32",
						},
					},
				},
				Required: []string{"statusX", "statusY"},
			},
		},
	}
}

func schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_ReplicationSource(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"kind"},
			},
		},
	}
}

func schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_ServiceSegmentRef(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"field1": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"field2": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"field1", "field2"},
			},
		},
	}
}

func schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_gnsQueryFilters(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"startTime": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"endTime": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"interval": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"isServiceDeployment": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"boolean"},
							Format: "",
						},
					},
					"startVal": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int32",
						},
					},
				},
				Required: []string{"startTime", "endTime", "interval", "isServiceDeployment", "startVal"},
			},
		},
	}
}

func schema_nexustempmodule_apis_gnstsmtanzuvmwarecom_v1_metricsFilers(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"startTime": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"endTime": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"timeInterval": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"someUserArg1": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"someUserArg2": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int32",
						},
					},
					"someUserArg3": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"boolean"},
							Format: "",
						},
					},
				},
				Required: []string{"startTime", "endTime", "timeInterval", "someUserArg1", "someUserArg2", "someUserArg3"},
			},
		},
	}
}

func schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_ACPConfig(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.ACPConfigSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.ACPConfigNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.ACPConfigNexusStatus", "nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.ACPConfigSpec"},
	}
}

func schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_ACPConfigNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.ACPStatus"),
						},
					},
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.ACPStatus", "nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_ACPConfigSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"displayName": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"gns": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"description": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"tags": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Type:   []string{"string"},
										Format: "",
									},
								},
							},
						},
					},
					"projectId": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"conditions": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Type:   []string{"string"},
										Format: "",
									},
								},
							},
						},
					},
					"destSvcGroupsGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.Link"),
									},
								},
							},
						},
					},
					"sourceSvcGroupsGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.Link"),
									},
								},
							},
						},
					},
				},
				Required: []string{"displayName", "gns", "description", "tags", "projectId", "conditions"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.Link"},
	}
}

func schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_ACPStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"statusABC": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int32",
						},
					},
					"statusXYZ": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int32",
						},
					},
				},
				Required: []string{"statusABC", "statusXYZ"},
			},
		},
	}
}

func schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_ACPSvcGroupLinkInfo(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"serviceName": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"serviceType": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"serviceName", "serviceType"},
			},
		},
	}
}

func schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_AccessControlPolicy(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.AccessControlPolicySpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.AccessControlPolicyNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.AccessControlPolicyNexusStatus", "nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.AccessControlPolicySpec"},
	}
}

func schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_AccessControlPolicyNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_AccessControlPolicySpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"policyConfigsGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.Child"),
									},
								},
							},
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.Child"},
	}
}

func schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_AdditionalDescription(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"discriptionA": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"discriptionB": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"discriptionC": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"discriptionD": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"discriptionA", "discriptionB", "discriptionC", "discriptionD"},
			},
		},
	}
}

func schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_AdditionalPolicyData(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.AdditionalPolicyDataSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.AdditionalPolicyDataNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.AdditionalPolicyDataNexusStatus", "nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.AdditionalPolicyDataSpec"},
	}
}

func schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_AdditionalPolicyDataNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.AdditionalStatus"),
						},
					},
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.AdditionalStatus", "nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_AdditionalPolicyDataSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"description": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.AdditionalDescription"),
						},
					},
				},
				Required: []string{"description"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.AdditionalDescription"},
	}
}

func schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_AdditionalStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"statusX": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int32",
						},
					},
					"statusY": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int32",
						},
					},
				},
				Required: []string{"statusX", "statusY"},
			},
		},
	}
}

func schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_Child(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"group": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"kind": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"name": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"group", "kind", "name"},
			},
		},
	}
}

func schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_Link(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"group": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"kind": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"name": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"group", "kind", "name"},
			},
		},
	}
}

func schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_NexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"sourceGeneration": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int64",
						},
					},
					"remoteGeneration": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int64",
						},
					},
				},
				Required: []string{"sourceGeneration", "remoteGeneration"},
			},
		},
	}
}

func schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_PolicyCfgAction(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"action": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"action"},
			},
		},
	}
}

func schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_RandomDescription(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"discriptionA": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"discriptionB": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"discriptionC": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"discriptionD": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"discriptionA", "discriptionB", "discriptionC", "discriptionD"},
			},
		},
	}
}

func schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_RandomPolicyData(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.RandomPolicyDataSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.RandomPolicyDataNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.RandomPolicyDataNexusStatus", "nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.RandomPolicyDataSpec"},
	}
}

func schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_RandomPolicyDataNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.RandomStatus"),
						},
					},
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.NexusStatus", "nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.RandomStatus"},
	}
}

func schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_RandomPolicyDataSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"description": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.RandomDescription"),
						},
					},
				},
				Required: []string{"description"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.RandomDescription"},
	}
}

func schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_RandomStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"statusX": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int32",
						},
					},
					"statusY": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int32",
						},
					},
				},
				Required: []string{"statusX", "statusY"},
			},
		},
	}
}

func schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_ResourceGroupID(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"name": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"type": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"name", "type"},
			},
		},
	}
}

func schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_ResourceGroupRef(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"name": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"type": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"name", "type"},
			},
		},
	}
}

func schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_VMpolicy(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.VMpolicyNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.VMpolicyNexusStatus"},
	}
}

func schema_nexustempmodule_apis_policypkgtsmtanzuvmwarecom_v1_VMpolicyNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/policypkg.tsm.tanzu.vmware.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_roottsmtanzuvmwarecom_v1_Child(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"group": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"kind": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"name": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"group", "kind", "name"},
			},
		},
	}
}

func schema_nexustempmodule_apis_roottsmtanzuvmwarecom_v1_Link(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"group": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"kind": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"name": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"group", "kind", "name"},
			},
		},
	}
}

func schema_nexustempmodule_apis_roottsmtanzuvmwarecom_v1_NexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"sourceGeneration": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int64",
						},
					},
					"remoteGeneration": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int64",
						},
					},
				},
				Required: []string{"sourceGeneration", "remoteGeneration"},
			},
		},
	}
}

func schema_nexustempmodule_apis_roottsmtanzuvmwarecom_v1_NonNexusType(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"test": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int32",
						},
					},
				},
				Required: []string{"test"},
			},
		},
	}
}

func schema_nexustempmodule_apis_roottsmtanzuvmwarecom_v1_Root(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/root.tsm.tanzu.vmware.com/v1.RootSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/root.tsm.tanzu.vmware.com/v1.RootNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/root.tsm.tanzu.vmware.com/v1.RootNexusStatus", "nexustempmodule/apis/root.tsm.tanzu.vmware.com/v1.RootSpec"},
	}
}

func schema_nexustempmodule_apis_roottsmtanzuvmwarecom_v1_RootNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/root.tsm.tanzu.vmware.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/root.tsm.tanzu.vmware.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_roottsmtanzuvmwarecom_v1_RootSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"configGvk": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/root.tsm.tanzu.vmware.com/v1.Child"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/root.tsm.tanzu.vmware.com/v1.Child"},
	}
}

func schema_nexustempmodule_apis_roottsmtanzuvmwarecom_v1_queryFilters(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"startTime": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"endTime": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"interval": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"isServiceDeployment": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"boolean"},
							Format: "",
						},
					},
					"startVal": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int32",
						},
					},
				},
				Required: []string{"startTime", "endTime", "interval", "isServiceDeployment", "startVal"},
			},
		},
	}
}

func schema_nexustempmodule_apis_servicegrouptsmtanzuvmwarecom_v1_Child(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"group": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"kind": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"name": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"group", "kind", "name"},
			},
		},
	}
}

func schema_nexustempmodule_apis_servicegrouptsmtanzuvmwarecom_v1_Link(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"group": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"kind": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"name": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"group", "kind", "name"},
			},
		},
	}
}

func schema_nexustempmodule_apis_servicegrouptsmtanzuvmwarecom_v1_NexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"sourceGeneration": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int64",
						},
					},
					"remoteGeneration": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int64",
						},
					},
				},
				Required: []string{"sourceGeneration", "remoteGeneration"},
			},
		},
	}
}

func schema_nexustempmodule_apis_servicegrouptsmtanzuvmwarecom_v1_SvcGroup(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/servicegroup.tsm.tanzu.vmware.com/v1.SvcGroupSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/servicegroup.tsm.tanzu.vmware.com/v1.SvcGroupNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/servicegroup.tsm.tanzu.vmware.com/v1.SvcGroupNexusStatus", "nexustempmodule/apis/servicegroup.tsm.tanzu.vmware.com/v1.SvcGroupSpec"},
	}
}

func schema_nexustempmodule_apis_servicegrouptsmtanzuvmwarecom_v1_SvcGroupLinkInfo(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/servicegroup.tsm.tanzu.vmware.com/v1.SvcGroupLinkInfoSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/servicegroup.tsm.tanzu.vmware.com/v1.SvcGroupLinkInfoNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/servicegroup.tsm.tanzu.vmware.com/v1.SvcGroupLinkInfoNexusStatus", "nexustempmodule/apis/servicegroup.tsm.tanzu.vmware.com/v1.SvcGroupLinkInfoSpec"},
	}
}

func schema_nexustempmodule_apis_servicegrouptsmtanzuvmwarecom_v1_SvcGroupLinkInfoNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/servicegroup.tsm.tanzu.vmware.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/servicegroup.tsm.tanzu.vmware.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_servicegrouptsmtanzuvmwarecom_v1_SvcGroupLinkInfoSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"clusterName": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"domainName": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"serviceName": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"serviceType": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"clusterName", "domainName", "serviceName", "serviceType"},
			},
		},
	}
}

func schema_nexustempmodule_apis_servicegrouptsmtanzuvmwarecom_v1_SvcGroupNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/servicegroup.tsm.tanzu.vmware.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/servicegroup.tsm.tanzu.vmware.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_servicegrouptsmtanzuvmwarecom_v1_SvcGroupSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"displayName": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"description": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"color": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"displayName", "description", "color"},
			},
		},
	}
}
