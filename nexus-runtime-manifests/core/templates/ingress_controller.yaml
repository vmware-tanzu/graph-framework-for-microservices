apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.2.0
    component: nexus
  name: nexus-ingress-nginx
  namespace: {{ default  .Release.Namespace .Values.global.namespace  }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.2.0
    component: nexus
  name: nexus-nginx-admsn-{{ default  .Release.Namespace .Values.global.namespace | replace "-" "" |  trunc 18  }}
  namespace: {{ default  .Release.Namespace .Values.global.namespace  }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.2.0
    component: nexus
  name: nexus-ingress-nginx
  namespace: {{ default  .Release.Namespace .Values.global.namespace  }}
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resourceNames:
  - ingress-controller-leader
  resources:
  - configmaps
  verbs:
  - get
  - update
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.2.0
    component: nexus
  name: nexus-nginx-admsn-{{ default  .Release.Namespace .Values.global.namespace | replace "-" "" |  trunc 18  }}
  namespace: {{ default  .Release.Namespace .Values.global.namespace  }}
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.2.0
    component: nexus
  name: nexus-nginx-{{ default  .Release.Namespace .Values.global.namespace | replace "-" "" |  trunc 18  }}
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - nodes
  - pods
  - secrets
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.2.0
    component: nexus
  name: nexus-nginx-admsn-{{ default  .Release.Namespace .Values.global.namespace | replace "-" "" |  trunc 18  }}
  namespace: {{ default  .Release.Namespace .Values.global.namespace  }}
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs:
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.2.0
    component: nexus
  name: nexus-ingress-nginx
  namespace: {{ default  .Release.Namespace .Values.global.namespace  }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nexus-ingress-nginx
subjects:
- kind: ServiceAccount
  name: nexus-ingress-nginx
  namespace: {{ default  .Release.Namespace .Values.global.namespace  }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.2.0
    component: nexus
  name: nexus-nginx-admsn-{{ default  .Release.Namespace .Values.global.namespace | replace "-" "" |  trunc 18  }}
  namespace: {{ default  .Release.Namespace .Values.global.namespace  }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nexus-nginx-admsn-{{ default  .Release.Namespace .Values.global.namespace | replace "-" "" |  trunc 18  }}
subjects:
- kind: ServiceAccount
  name: nexus-nginx-admsn-{{ default  .Release.Namespace .Values.global.namespace | replace "-" "" |  trunc 18  }}
  namespace: {{ default  .Release.Namespace .Values.global.namespace  }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.2.0
    component: nexus
  name: nexus-nginx-{{ default  .Release.Namespace .Values.global.namespace | replace "-" "" |  trunc 18  }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nexus-nginx-{{ default  .Release.Namespace .Values.global.namespace | replace "-" "" |  trunc 18  }}
subjects:
- kind: ServiceAccount
  name: nexus-ingress-nginx
  namespace: {{ default  .Release.Namespace .Values.global.namespace  }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.2.0
    component: nexus
  name: nginx-admsn-{{ default  .Release.Namespace .Values.global.namespace | replace "-" "" |  trunc 18  }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nexus-nginx-admsn-{{ default  .Release.Namespace .Values.global.namespace | replace "-" "" |  trunc 18  }}
subjects:
- kind: ServiceAccount
  name: nexus-nginx-admsn-{{ default  .Release.Namespace .Values.global.namespace | replace "-" "" |  trunc 18  }}
  namespace: {{ default  .Release.Namespace .Values.global.namespace  }}
---
apiVersion: v1
data:
  allow-snippet-annotations: "true"
  enable-underscores-in-headers: "true"
  ignore-invalid-headers: "false"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.2.0
    component: nexus
  name: nexus-ingress-nginx-controller
  namespace: {{ default  .Release.Namespace .Values.global.namespace  }}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.2.0
    component: nexus
  name: nexus-ingress-nginx-controller
  namespace: {{ default  .Release.Namespace .Values.global.namespace  }}
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  - name: https
    port: 443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    component: nexus
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.2.0
    component: nexus
  name: nexus-ingress-nginx-controller-admission
  namespace: {{ default  .Release.Namespace .Values.global.namespace  }}
spec:
  ports:
  - name: https-webhook
    port: 443
    targetPort: webhook
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    component: nexus
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.2.0
    component: nexus
  name: nexus-ingress-nginx-controller
  namespace: {{ default  .Release.Namespace .Values.global.namespace  }}
spec:
  minReadySeconds: 0
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
      component: nexus
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        component: nexus
    spec:
      {{- if eq .Values.global.tainted true }}
      {{- template "tolerations" .}}
      {{- end }}
      containers:
      - args:
        - /nginx-ingress-controller
        - --publish-service=$(POD_NAMESPACE)/nexus-ingress-nginx-controller
        - --election-id=ingress-controller-leader
        - --controller-class=k8s.io/ingress-nginx
        - --ingress-class=nginx-{{ default  .Release.Namespace .Values.global.namespace  }}
        - --configmap=$(POD_NAMESPACE)/nexus-ingress-nginx-controller
        - --validating-webhook=:8443
        - --validating-webhook-certificate=/usr/local/certificates/cert
        - --validating-webhook-key=/usr/local/certificates/key
        - --watch-namespace=$(POD_NAMESPACE)
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LD_PRELOAD
          value: /usr/local/lib/libmimalloc.so
        image: {{.Values.global.registry}}/ingress-nginx/controller:v1.2.0
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /wait-shutdown
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        name: controller
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          name: https
          protocol: TCP
        - containerPort: 8443
          name: webhook
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          runAsUser: 101
        volumeMounts:
        - mountPath: /usr/local/certificates/
          name: webhook-cert
          readOnly: true
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: nexus-ingress-nginx
      terminationGracePeriodSeconds: 300
      volumes:
      - name: webhook-cert
        secret:
          secretName: nexus-nginx-admsn-{{ default  .Release.Namespace .Values.global.namespace  }}
---
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.2.0
    component: nexus
  name: nexus-nginx-admsn-{{ default  .Release.Namespace .Values.global.namespace  }}-create
  namespace: {{ default  .Release.Namespace .Values.global.namespace  }}
  annotations:
    {{- template "argoJobHook" .}}
spec:
  template:
    metadata:
      annotations:
        "sidecar.istio.io/inject": "false"
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.2.0
        component: nexus
      name: nexus-nginx-admsn-{{ default  .Release.Namespace .Values.global.namespace  }}-create
    spec:
      containers:
      - args:
        - create
        - --host=nexus-ingress-nginx-controller-admission,nexus-ingress-nginx-controller-admission.$(POD_NAMESPACE).svc
        - --namespace=$(POD_NAMESPACE)
        - --secret-name=nexus-nginx-admsn-{{ default  .Release.Namespace .Values.global.namespace  }}
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: {{.Values.global.registry}}/ingress-nginx/kube-webhook-certgen:v1.1.1
        imagePullPolicy: IfNotPresent
        name: create
        securityContext:
          allowPrivilegeEscalation: false
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 2000
      serviceAccountName: nexus-nginx-admsn-{{ default  .Release.Namespace .Values.global.namespace | replace "-" "" |  trunc 18  }}
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    {{- template "argoJobHook" .}}
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.2.0
    component: nexus
  name: nexus-nginx-admsn-{{ default  .Release.Namespace .Values.global.namespace  }}-patch
  namespace: {{ default  .Release.Namespace .Values.global.namespace  }}
spec:
  template:
    metadata:
      annotations:
        "sidecar.istio.io/inject": "false"
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.2.0
      name: nginx-admsn-{{ default  .Release.Namespace .Values.global.namespace  }}-patch
    spec:
      containers:
      - args:
        - patch
        - --webhook-name=nexus-nginx-{{ default  .Release.Namespace .Values.global.namespace  }}
        - --namespace=$(POD_NAMESPACE)
        - --patch-mutating=false
        - --secret-name=nexus-nginx-admsn-{{ default  .Release.Namespace .Values.global.namespace  }}
        - --patch-failure-policy=Fail
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: {{.Values.global.registry}}/ingress-nginx/kube-webhook-certgen:v1.1.1
        imagePullPolicy: IfNotPresent
        name: patch
        securityContext:
          allowPrivilegeEscalation: false
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 2000
      serviceAccountName: nexus-nginx-admsn-{{ default  .Release.Namespace .Values.global.namespace | replace "-" "" |  trunc 18  }}
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.2.0
    component: nexus
  name: nexus-nginx-{{ default  .Release.Namespace .Values.global.namespace  }}
  namespace: {{ default  .Release.Namespace .Values.global.namespace  }}
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: nexus-ingress-nginx-controller-admission
      namespace: {{ default  .Release.Namespace .Values.global.namespace  }}
      path: /networking/v1/ingresses
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validate.nginx.ingress.kubernetes.io
  rules:
  - apiGroups:
    - networking.k8s.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingresses
  sideEffects: None
  namespaceSelector:
    matchExpressions:
    - key: name
      operator: In
      values:
      - {{ default  .Release.Namespace .Values.global.namespace  }}
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: nexus-nginx
  namespace: {{ default  .Release.Namespace .Values.global.namespace  }}
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: nexus-nginx
  replicas: 1
  template:
    metadata:
      labels:
        app: nexus-nginx
    spec:
      {{- if eq .Values.global.tainted true }}
      {{- template "tolerations" .}}
      {{- end }}
      containers:
      - name: nginx
        image: "{{.Values.global.registry}}/nexus-filehost:latest"
        ports:
        - containerPort: 80
        command:
          - "/bin/bash"
          - "-c"
          - "mkdir -p /data/datamodel && ./server"
        env:
          - name:  DATAMODEL_DIRECTORY
            value: /data
        volumeMounts:
          - name: nginx-data
            mountPath: /data
            readOnly: false
      volumes:
        - name: nginx-data
          persistentVolumeClaim:
            claimName: nexus-nginx-data
---
apiVersion: v1
kind: Service
metadata:
  name: nexus-nginx
  namespace: {{ default  .Release.Namespace .Values.global.namespace  }}
  labels:
    app: nexus-nginx
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: nexus-nginx
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nexus-nginx-data
  namespace: {{ default  .Release.Namespace .Values.global.namespace  }}
  labels:
    created-by: nexus
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
