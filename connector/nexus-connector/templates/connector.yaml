apiVersion: v1
kind: ConfigMap
metadata:
  name: connector-kubeconfig-local
  namespace: {{.Release.Namespace}}
data:
  connector-config: |
      dispatcher:
          workerTTL: "15s"
          maxWorkerCount: 100
          closeRequestsQueueSize: 15
          eventProcessedQueueSize: 100
      ignoredNamespaces:
          matchNames:
              - "kube-public"
              - "kube-system"
              - "kube-node-lease"
              - "istio-system"
              - "ibm-system"
              - "ibm-operators"
              - "ibm-cert-store"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: connector
  namespace: {{.Release.Namespace}}
  labels:
    control-plane: connector
spec:
  selector:
    matchLabels:
      control-plane: connector
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: connector
    spec:
      containers:
        - image: {{.Values.global.registry}}/nexus-connector-svc:{{.Values.global.connector.tag}}
          name: connector
          env:
            - name: DEPLOYMENT_NAME
              value: connector
            {{- if ne .Values.global.remoteEndpointHost "" }}
            - name: REMOTE_ENDPOINT_HOST
              value: {{ .Values.global.remoteEndpointHost }}
            {{- end }}
            {{- if ne .Values.global.remoteEndpointPort "" }}
            - name: REMOTE_ENDPOINT_PORT
              value: "{{ .Values.global.remoteEndpointPort }}"
            {{- end }}
            {{- if ne .Values.global.remoteEndpointCert "" }}
            - name: REMOTE_ENDPOINT_CERT
              value: {{ .Values.global.remoteEndpointCert }}
            {{end}}
             {{- if ne .Values.global.remoteEndpointPath "" }}
            - name: REMOTE_ENDPOINT_PATH
              value: {{ .Values.global.remoteEndpointPath }}
            {{end}}
            - name: STATUS_REPLICATION
              value: {{ .Values.global.statusReplication }}
            - name: SECRET_NS
              value: {{.Release.Namespace}}
            - name: SECRET_NAME
              value: controller-secret
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 64Mi
          volumeMounts:
            - mountPath: /config
              name: config
            {{- if eq .Values.global.statusReplication "ENABLED"}}
            - mountPath: /etc/secret-volume
              name: secret-volume
            {{- end }}
      volumes:
        - name: config
          configMap:
            name: connector-kubeconfig-local
        {{- if eq .Values.global.statusReplication "ENABLED"}}
        - name: secret-volume
          secret:
            secretName: controller-secret
        {{- end }}
      {{if ne .Values.global.imagepullsecret "" }}
      imagePullSecrets:
      - name: {{ .Values.global.imagepullsecret }}
      {{end}}
      terminationGracePeriodSeconds: 10
      securityContext:
        runAsUser: 0
        runAsGroup: 0
---
apiVersion: v1
kind: Service
metadata:
  name: nexus-connector
  namespace: {{.Release.Namespace}}
spec:
  ports:
  - protocol: TCP
    name: http
    port: 80
    targetPort: 80
  - protocol: TCP
    name: https
    port: 443
    targetPort: 443
  selector:
    control-plane: connector
---
{{- if eq .Values.global.statusReplication "ENABLED"}}
apiVersion: v1
data:
  namespace: {{ .Release.Namespace | b64enc }}
  {{- if ne .Values.global.token "" }}
  token: {{ .Values.global.token | b64enc }}
  {{- else }}
  {{- fail "Please provide valid token"}}
  {{- end }}
kind: Secret
metadata:
  name: controller-secret
  namespace: {{.Release.Namespace}}
{{- end }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: nexus-connector-role-{{.Release.Namespace}}
  namespace: {{ .Release.Namespace }}
rules:
- apiGroups:
  - "apps"
  resources:
  - "deployments"
  verbs:
  - "*"
- apiGroups:
  - ""
  resources:
  - "configmaps"
  - "services"
  - "secrets"
  verbs:
  - "*"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: nexus-connector-rb-{{.Release.Namespace}}
  namespace: {{.Release.Namespace}}
subjects:
- kind: ServiceAccount
  name: default
  namespace: {{.Release.Namespace}}
roleRef:
  kind: Role
  name: nexus-connector-role-{{.Release.Namespace}}
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nexus-connector-cr-{{.Release.Namespace}}
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nexus-connector-crb-{{.Release.Namespace}}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nexus-connector-cr-{{.Release.Namespace}}
subjects:
- kind: ServiceAccount
  name: default
  namespace: {{.Release.Namespace}}
