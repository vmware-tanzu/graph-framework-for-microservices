apiVersion: v1
kind: ConfigMap
metadata:
  name: connector-kubeconfig-local
data:
  kubeconfig: |
    current-context: localapiserver
    apiVersion: v1
    kind: Config
    clusters:
    - cluster:
        api-version: v1
        server: http://nexus-proxy-container:80
        insecure-skip-tls-verify: true
      name: localapiserver
    contexts:
    - context:
        cluster: localapiserver
      name: localapiserver
  connector-config: |
    dispatcher:
        workerTTL: "15s"
        maxWorkerCount: 100
        closeRequestsQueueSize: 15
        eventProcessedQueueSize: 100
    ignoredNamespaces:
        matchNames:
            - "kube-public"
            - "kube-system"
            - "kube-node-lease"
            - "istio-system"
            - "ibm-system"
            - "ibm-operators"
            - "ibm-cert-store"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: connector
  labels:
    control-plane: connector
spec:
  selector:
    matchLabels:
      control-plane: connector
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: connector
    spec:
      initContainers:
        - name: check-nexus-proxy-container
          image: "gcr.io/mesh7-public-images/tools:latest"
          command:
            - /bin/bash
            - -c
            - |
              #!/bin/bash
              set -x
              URL="http://nexus-proxy-container/api/v1/namespaces"
              max_retries=20
              counter=0
              while [[ $counter -lt $max_retries ]]; do
                    status=$(curl -s -o /dev/null -I -w "%{http_code}" -XGET $URL)
                    if [ $status == "200" ]; then
                        echo "$URL is reachable"
                        exit 0
                    else
                        counter=$((counter +1))
                        sleep 5
                    fi
              done
      containers:
        -
          image: "{{.Image}}:{{.Tag}}"
          name: connector
          env:
            - name: KUBECONFIG
              value: /config/kubeconfig
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          # TODO(user): Configure the resources accordingly based on the project requirements.
          # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 64Mi
          volumeMounts:
            - mountPath: /config
              name: config
      volumes:
        - name: config
          configMap:
            name: connector-kubeconfig-local
      {{if .IsImagePullSecret }}
      imagePullSecrets:
      - name: {{ .ImagePullSecret }}
      {{end}}
      terminationGracePeriodSeconds: 10
      securityContext:
        runAsUser: 0
        runAsGroup: 0
---
apiVersion: v1
kind: Service
metadata:
  name: nexus-connector
spec:
  ports:
  - protocol: TCP
    name: http
    port: 80
    targetPort: 80
  - protocol: TCP
    name: https
    port: 443
    targetPort: 443
  selector:
    control-plane: connector
